
/**
 *  Generated by mxmlc 4.0
 *
 *  Package:    
 *  Class:      AddItemActionEffectExample
 *  Source:     F:\GitHub\hataka\hataka.github.io\TourDeFlex3\explorer\mx\effects\AddItemActionEffectExample\AddItemActionEffectExample.mxml
 *  Template:   flex2/compiler/mxml/gen/ClassDef.vm
 *  Time:       2018.12.28 10:14:05 JST
 */

package 
{

import flash.accessibility.*;
import flash.debugger.*;
import flash.display.*;
import flash.errors.*;
import flash.events.*;
import flash.events.MouseEvent;
import flash.external.*;
import flash.geom.*;
import flash.media.*;
import flash.net.*;
import flash.printing.*;
import flash.profiler.*;
import flash.system.*;
import flash.text.*;
import flash.ui.*;
import flash.utils.*;
import flash.xml.*;
import mx.binding.*;
import mx.binding.IBindingClient;
import mx.containers.Panel;
import mx.controls.Button;
import mx.controls.TileList;
import mx.core.Application;
import mx.core.ClassFactory;
import mx.core.DeferredInstanceFromClass;
import mx.core.DeferredInstanceFromFunction;
import mx.core.IDeferredInstance;
import mx.core.IFactory;
import mx.core.IFlexModuleFactory;
import mx.core.IPropertyChangeNotifier;
import mx.core.UIComponentDescriptor;
import mx.core.mx_internal;
import mx.effects.AddItemAction;
import mx.effects.Blur;
import mx.effects.Move;
import mx.effects.Parallel;
import mx.effects.RemoveItemAction;
import mx.effects.Sequence;
import mx.filters.*;
import mx.styles.*;


[SWF( heightPercent='100%', widthPercent='100%')]
[Frame(extraClass="_AddItemActionEffectExample_FlexInit")]

[Frame(factoryClass="_AddItemActionEffectExample_mx_managers_SystemManager")]


public class AddItemActionEffectExample
    extends mx.core.Application
    implements mx.binding.IBindingClient
{

/**
 * @private
 **/
    public var _AddItemActionEffectExample_Move1 : mx.effects.Move;

    [Bindable]
	/**
 * @private
 **/
    public var itemsChangeEffect1 : mx.effects.Sequence;

    [Bindable]
	/**
 * @private
 **/
    public var tlist0 : mx.controls.TileList;




private var _documentDescriptor_ : mx.core.UIComponentDescriptor = 
new mx.core.UIComponentDescriptor({
  type: mx.core.Application
  ,
  propertiesFactory: function():Object { return {
    childDescriptors: [
      new mx.core.UIComponentDescriptor({
        type: mx.containers.Panel
        ,
        stylesFactory: function():void {
          this.paddingBottom = 10;
          this.paddingTop = 10;
          this.paddingLeft = 10;
          this.paddingRight = 10;
        }
        ,
        propertiesFactory: function():Object { return {
          title: "AddItemEffect/RemoveItemEffect Example",
          percentHeight: 100.0,
          percentWidth: 100.0,
          childDescriptors: [
            new mx.core.UIComponentDescriptor({
              type: mx.controls.TileList
              ,
              id: "tlist0"
              ,
              stylesFactory: function():void {
                this.fontSize = 18;
                this.fontWeight = "bold";
              }
              ,
              propertiesFactory: function():Object { return {
                percentHeight: 100.0,
                percentWidth: 100.0,
                columnCount: 4,
                rowCount: 4,
                direction: "horizontal",
                allowMultipleSelection: true,
                offscreenExtraRowsOrColumns: 4
              }}
            })
          ,
            new mx.core.UIComponentDescriptor({
              type: mx.controls.Button
              ,
              events: {
                click: "___AddItemActionEffectExample_Button1_click"
              }
              ,
              propertiesFactory: function():Object { return {
                label: "Delete selected item(s)"
              }}
            })
          ,
            new mx.core.UIComponentDescriptor({
              type: mx.controls.Button
              ,
              events: {
                click: "___AddItemActionEffectExample_Button2_click"
              }
              ,
              propertiesFactory: function():Object { return {
                label: "Add item"
              }}
            })
          ]
        }}
      })
    ]
  }}
})

    /**
     * @private
     **/
    public function AddItemActionEffectExample()
    {
        super();

        mx_internal::_document = this;


        var bindings:Array = _AddItemActionEffectExample_bindingsSetup();
        var watchers:Array = [];

        var target:Object = this;

        if (_watcherSetupUtil == null)
        {
            var watcherSetupUtilClass:Object = getDefinitionByName("_AddItemActionEffectExampleWatcherSetupUtil");
            watcherSetupUtilClass["init"](null);
        }

        _watcherSetupUtil.setup(this,
                    function(propertyName:String):* { return target[propertyName]; },
                    function(propertyName:String):* { return AddItemActionEffectExample[propertyName]; },
                    bindings,
                    watchers);

        mx_internal::_bindings = mx_internal::_bindings.concat(bindings);
        mx_internal::_watchers = mx_internal::_watchers.concat(watchers);


        // layer initializers

       
        // properties
        _AddItemActionEffectExample_Sequence1_i();


        // events










        for (var i:uint = 0; i < bindings.length; i++)
        {
            Binding(bindings[i]).execute();
        }


    }

    /**
     * @private
     **/ 
    private var __moduleFactoryInitialized:Boolean = false;

    /**
     * @private
     * Override the module factory so we can defer setting style declarations
     * until a module factory is set. Without the correct module factory set
     * the style declaration will end up in the wrong style manager.
     **/ 
    override public function set moduleFactory(factory:IFlexModuleFactory):void
    {
        super.moduleFactory = factory;
        
        if (__moduleFactoryInitialized)
            return;

        __moduleFactoryInitialized = true;


        // our style settings
        //  initialize component styles
        if (!this.styleDeclaration)
        {
            this.styleDeclaration = new CSSStyleDeclaration(null, styleManager);
        }

        this.styleDeclaration.defaultFactory = function():void
        {
            this.paddingBottom = 0;
            this.paddingTop = 0;
            this.paddingLeft = 0;
            this.paddingRight = 0;
        };


        // ambient styles
        mx_internal::_AddItemActionEffectExample_StylesInit();

                         
    }
 
    /**
     * @private
     **/
    override public function initialize():void
    {
        mx_internal::setDocumentDescriptor(_documentDescriptor_);


        super.initialize();
    }



            import mx.effects.easing.Elastic;
            import mx.collections.ArrayCollection;
            
            [Bindable]
            private var myDP:ArrayCollection = new ArrayCollection(
                ['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P']);
            
            private function deleteItem():void {
                // As each item is removed, the index of the other items changes.
                // So first get the items to delete, then determine their indices
                // as you remove them.
                var toRemove:Array = [];
                for (var i:int = 0; i < tlist0.selectedItems.length; i++)
                    toRemove.push(tlist0.selectedItems[i]);
                for (i = 0; i < toRemove.length; i++)
                    myDP.removeItemAt(myDP.getItemIndex(toRemove[i]));
            }

            private var zcount:int = 0;
            private function addItem():void {
                // Always add the new item after the third item,
                // or after the last item if the length is less than 3.
                myDP.addItemAt("Z"+zcount++,Math.min(3,myDP.length));
            }                        
        



    //  supporting function definitions for properties, events, styles, effects
private function _AddItemActionEffectExample_Sequence1_i() : mx.effects.Sequence
{
	var temp : mx.effects.Sequence = new mx.effects.Sequence();
	temp.children = [_AddItemActionEffectExample_Blur1_c(), _AddItemActionEffectExample_Parallel1_c()];
	itemsChangeEffect1 = temp;
	mx.binding.BindingManager.executeBindings(this, "itemsChangeEffect1", itemsChangeEffect1);
	return temp;
}

private function _AddItemActionEffectExample_Blur1_c() : mx.effects.Blur
{
	var temp : mx.effects.Blur = new mx.effects.Blur();
	temp.blurYTo = 12;
	temp.blurXTo = 12;
	temp.duration = 300;
	temp.perElementOffset = 150;
	temp.filter = "removeItem";
	return temp;
}

private function _AddItemActionEffectExample_Parallel1_c() : mx.effects.Parallel
{
	var temp : mx.effects.Parallel = new mx.effects.Parallel();
	temp.children = [_AddItemActionEffectExample_Move1_i(), _AddItemActionEffectExample_RemoveItemAction1_c(), _AddItemActionEffectExample_AddItemAction1_c(), _AddItemActionEffectExample_Blur2_c()];
	return temp;
}

private function _AddItemActionEffectExample_Move1_i() : mx.effects.Move
{
	var temp : mx.effects.Move = new mx.effects.Move();
	temp.duration = 750;
	temp.perElementOffset = 20;
	_AddItemActionEffectExample_Move1 = temp;
	mx.binding.BindingManager.executeBindings(this, "_AddItemActionEffectExample_Move1", _AddItemActionEffectExample_Move1);
	return temp;
}

private function _AddItemActionEffectExample_RemoveItemAction1_c() : mx.effects.RemoveItemAction
{
	var temp : mx.effects.RemoveItemAction = new mx.effects.RemoveItemAction();
	temp.startDelay = 400;
	temp.filter = "removeItem";
	return temp;
}

private function _AddItemActionEffectExample_AddItemAction1_c() : mx.effects.AddItemAction
{
	var temp : mx.effects.AddItemAction = new mx.effects.AddItemAction();
	temp.startDelay = 400;
	temp.filter = "addItem";
	return temp;
}

private function _AddItemActionEffectExample_Blur2_c() : mx.effects.Blur
{
	var temp : mx.effects.Blur = new mx.effects.Blur();
	temp.startDelay = 410;
	temp.blurXFrom = 18;
	temp.blurYFrom = 18;
	temp.blurXTo = 0;
	temp.blurYTo = 0;
	temp.duration = 300;
	temp.filter = "addItem";
	return temp;
}

/**
 * @private
 **/
public function ___AddItemActionEffectExample_Button1_click(event:flash.events.MouseEvent):void
{
	deleteItem()
}

/**
 * @private
 **/
public function ___AddItemActionEffectExample_Button2_click(event:flash.events.MouseEvent):void
{
	addItem()
}


    //  binding mgmt
    private function _AddItemActionEffectExample_bindingsSetup():Array
    {
        var result:Array = [];

        result[0] = new mx.binding.Binding(this,
            function():Function
            {

                return (Elastic.easeOut);
            },
            null,
            "_AddItemActionEffectExample_Move1.easingFunction"
            );

        result[1] = new mx.binding.Binding(this,
            function():Object
            {

                return (myDP);
            },
            null,
            "tlist0.dataProvider"
            );

        result[2] = new mx.binding.Binding(this,
            null,
            function(_sourceFunctionReturnValue:*):void
            {
                tlist0.setStyle("itemsChangeEffect", _sourceFunctionReturnValue);
            },
            "tlist0.itemsChangeEffect"
            , "itemsChangeEffect1");


        return result;
    }


    /**
     * @private
     **/
    public static function set watcherSetupUtil(watcherSetupUtil:IWatcherSetupUtil2):void
    {
        (AddItemActionEffectExample)._watcherSetupUtil = watcherSetupUtil;
    }

    private static var _watcherSetupUtil:IWatcherSetupUtil2;


    mx_internal var _AddItemActionEffectExample_StylesInit_done:Boolean = false;

    mx_internal function _AddItemActionEffectExample_StylesInit():void
    {
        //  only add our style defs to the style manager once
        if (mx_internal::_AddItemActionEffectExample_StylesInit_done)
            return;
        else
            mx_internal::_AddItemActionEffectExample_StylesInit_done = true;
            
        var style:CSSStyleDeclaration;
        var effects:Array;
                    

        var conditions:Array;
        var condition:CSSCondition;
        var selector:CSSSelector;

        styleManager.initProtoChainRoots();
    }



    /**
     * @private
     **/
    mx_internal var _bindings : Array = [];
    /**
     * @private
     **/
    mx_internal var _watchers : Array = [];
    /**
     * @private
     **/
    mx_internal var _bindingsByDestination : Object = {};
    /**
     * @private
     **/
    mx_internal var _bindingsBeginWithWord : Object = {};

}

}
